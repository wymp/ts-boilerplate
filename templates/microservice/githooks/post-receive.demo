#!/bin/bash

set -e

function deploy() {
    svcname="$(basename "$PWD")"
    if [ "$svcname" == "build" ]; then
        svcname="dev.$(basename "$(dirname "$PWD")" | sed 's/-src//')"
    fi
    echo "Restarting $svcname"
    sudo systemctl restart "$svcname"
}

# Get to the repo root, but keep git intact
cd ../
export GIT_DIR="$PWD/.git"
export GIT_WORK_TREE="$PWD/"

n=0;
while read oldrev newrev refname; do
    # we only care about branches
    if echo "$refname" | grep -Fq "/heads/"; then
        !((n++))
        targ_branch=$(git rev-parse --symbolic --abbrev-ref "$refname")
    fi
done;
current_branch="$(git rev-parse --abbrev-ref HEAD)"

# If for some reason we didn't push anything, don't do anything
if [ "$n" -eq 0 ]; then
    echo "I: No branch pushed; exiting."
    exit 0;

# Otherwise, if we only pushed one branch, check it out
elif [ "$n" -eq 1 ]; then
    if [ "$current_branch" != "$targ_branch" ]; then
        git checkout -f "$targ_branch"
    else
        deploy
    fi

# If we pushed multiple branches, just force checkout the branch we're on
else
    echo "I: You've pushed more than one branch. Staying on current branch and deploying instance with new updated files....";
    echo
    if [ "$(git config receive.denyCurrentBranch)" != 'updateInstead' ]; then
        git checkout -f ./
    fi
    deploy
fi

targ_branch="$(git status | grep -oP 'On branch \K(.+)')"
echo "I: Up to date on branch "'"'"$targ_branch"'"'

